// <auto-generated />
using System;
using AnimeAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimeAPI.Domain.Entities.Anime", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Animes", (string)null);
                });

            modelBuilder.Entity("AnimeAPI.Domain.Entities.Anime", b =>
                {
                    b.OwnsOne("AnimeAPI.Domain.ValueObjects.Director", "Director", b1 =>
                        {
                            b1.Property<Guid>("AnimeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DirectorName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Director");

                            b1.HasKey("AnimeId");

                            b1.ToTable("Animes");

                            b1.WithOwner()
                                .HasForeignKey("AnimeId");
                        });

                    b.OwnsOne("AnimeAPI.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("AnimeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Tittle")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Name");

                            b1.HasKey("AnimeId");

                            b1.ToTable("Animes");

                            b1.WithOwner()
                                .HasForeignKey("AnimeId");
                        });

                    b.OwnsOne("AnimeAPI.Domain.ValueObjects.Summary", "Summary", b1 =>
                        {
                            b1.Property<Guid>("AnimeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("SummaryText")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Summary");

                            b1.HasKey("AnimeId");

                            b1.ToTable("Animes");

                            b1.WithOwner()
                                .HasForeignKey("AnimeId");
                        });

                    b.Navigation("Director")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Summary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
